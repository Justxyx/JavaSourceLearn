package design_pattern.p12代理模式c.p1静态代理;

/**
 * @author xm
 * @date 2021/9/17 17:55
 * @description:
 *      静态代理的作用在哪？      可以在不修改目标对象的前提下，对目标功能扩展
 *      缺点： 代理对象与目标对象维护两个对象
 *
 *      可能会还是不太理解，为什么会需要代理。
 *      - 代理接口
 *      - 被代理类，需要实现代理接口
 *      - 代理类， 需要实现代理接口
 *
 *      静态代理的一个应用场景：
 *          对同一个对象的方法， 普通用户与管理员用户进行操作时， 管理员操作要记录日志。
 *          再比如，铲平经理突然有一个要求，要在所有的类方法前后都打印日志 怎么操作 ?
 *
 *
 *     贴一段知乎上的话：
 *     刚开始我会觉得SubjectProxy定义出来纯属多余，直接实例化实现类完成操作不就结了吗？后来随着业务庞大，
 *     你就会知道，实现proxy类对真实类的封装对于粒度的控制有着重要的意义。但是静态代理这个模式本身有个大问题，
 *     如果类方法数量越来越多的时候，代理类的代码量是十分庞大的。所以引入动态代理来解决此类问题。
 *
 *     动态代理只用new 一个代理类
 */
public interface IUserDao {
    void save();
}

